% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\docType{methods}
\name{split_rows}
\alias{split_rows}
\alias{split_rows,InputHeatmap-method}
\alias{split_columns}
\alias{split_columns,InputHeatmap-method}
\title{Split the heatmap row-wise depending on the biggest branches in the cladogram.}
\usage{
split_rows(.data, number_of_groups)

\S4method{split_rows}{InputHeatmap}(.data, number_of_groups)

split_columns(.data, number_of_groups)

\S4method{split_columns}{InputHeatmap}(.data, number_of_groups)
}
\arguments{
\item{.data}{A `InputHeatmap`}

\item{number_of_groups}{An integer. The number of groups to split the cladogram into.}
}
\value{
A `InputHeatmap` object that gets evaluated to a `ComplexHeatmap`

A `InputHeatmap` object that gets evaluated to a `ComplexHeatmap`

A `InputHeatmap` object that gets evaluated to a `ComplexHeatmap`

A `InputHeatmap` object that gets evaluated to a `ComplexHeatmap`
}
\description{
split_rows() from a `InputHeatmap` object, split the row cladogram.

split_columns() from a `InputHeatmap` object, split the column cladogram.
}
\details{
\lifecycle{maturing}

It uses `ComplexHeatmap` as visualisation tool.

\lifecycle{maturing}

It uses `ComplexHeatmap` as visualisation tool.
}
\examples{

library(dplyr)

hm = 
  tidyHeatmap::N52 \%>\%
  tidyHeatmap::heatmap(
    .row = symbol_ct,
    .column = UBR,
    .value = `read count normalised log`
)

hm \%>\% split_rows(2)


library(dplyr)

hm = 
  tidyHeatmap::N52 \%>\%
  tidyHeatmap::heatmap(
    .row = symbol_ct,
    .column = UBR,
    .value = `read count normalised log`
)

hm \%>\% split_columns(2)

}
